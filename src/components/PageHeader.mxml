<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         width="100%" height="92"
         creationComplete="onCreationComplete(event)">

    <fx:Style source="/design/newStyle.css"/>

    <s:states>
        <s:State name="anonymous"/>
        <s:State name="authorised"/>
    </s:states>

    <fx:Script>
		<![CDATA[
        import controllers.AuthController;
        import controllers.MainController;
        import controllers.SearchController;

        import models.MainModel;
        import models.SearchResultsModel;
        import models.UserInfoModel;
        import models.events.AuthEvent;

        import mx.events.FlexEvent;

        private var _authController:AuthController;

        protected function onLogoClick(event:MouseEvent):void
        {
            MainController.instance.changeView(MainModel.BUILDER_VIEW, null);
        }

        protected function onSignInClick(event:MouseEvent):void
        {
            LoginWindow.show();
        }

        protected function onSignUpClick(event:MouseEvent):void
        {
            SignupWindow.show();
        }

        protected function onCreationComplete(event:FlexEvent):void
        {
            _authController = new AuthController();
            UserInfoModel.instance.addEventListener(AuthEvent.AUTH_SUCCESS, onSuccessAuth);
            UserInfoModel.instance.addEventListener(AuthEvent.LOGOUT, onLogout);
        }

        private function onSuccessAuth(event:AuthEvent):void
        {
            currentState = "authorised";
        }

        private function onLogout(event:AuthEvent):void
        {
            currentState = "anonymous";
        }

        protected function onLogoutClick(event:MouseEvent):void
        {
            _authController.logout();
        }

        private function onSearchEnter(event:FlexEvent):void
        {
            var searchModel:SearchResultsModel = new SearchResultsModel();
            var searchController:SearchController = new SearchController(searchModel);
            searchController.findCocktail(event.currentTarget.text);
        }

        ]]>
	</fx:Script>
    <fx:Declarations>
        <!-- Place non-visual elements (e.g., services, value objects) here -->
    </fx:Declarations>
    <s:BitmapImage width="100%" height="100%" fillMode="repeat" smooth="false" source="@Embed(source='/../assets/pattern-top.png')" />
    <s:Image width="240" height="80" left="15" verticalCenter="0" source="@Embed(source='/../assets/logo-main.png')"
             blendMode="normal" buttonMode="true" click="onLogoClick(event)"/>
    <s:HGroup right="20" top="15" gap="10" includeIn="anonymous">
        <s:Label text="Войти" fontSize="14" textDecoration="underline" color="0xffffff" fontFamily="CenturyGothic"
                 buttonMode="true" click="onSignInClick(event)"/>
        <s:Line xFrom="0" xTo="0" height="100%">
            <s:stroke>
                <s:SolidColorStroke weight="1" color="0xffffff"/>
            </s:stroke>
        </s:Line>
        <s:Label text="Зарегистрироваться" fontSize="14" textDecoration="underline" color="0xffffff"
                 fontFamily="CenturyGothic" buttonMode="true" click="onSignUpClick(event)"/>
    </s:HGroup>
    <s:HGroup right="20" top="15" gap="10" includeIn="authorised">
        <s:Label text="{UserInfoModel.instance.displayName}" fontSize="14" textDecoration="underline" color="0xffffff"
                 fontFamily="CenturyGothic"/>
        <s:Line xFrom="0" xTo="0" height="100%">
            <s:stroke>
                <s:SolidColorStroke weight="1" color="0xffffff"/>
            </s:stroke>
        </s:Line>
        <s:Label text="Выйти" fontSize="14" textDecoration="underline" color="0xffffff" fontFamily="CenturyGothic"
                 buttonMode="true" click="onLogoutClick(event)"/>
    </s:HGroup>
    <s:TextInput right="20" bottom="15" width="200" enter="onSearchEnter(event)" prompt="название коктейля..." skinClass="design.skins.RoundTextInputSkin" />
</s:Group>
