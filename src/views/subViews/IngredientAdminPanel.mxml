<?xml version="1.0"?>
<!--
  Created by Crabar on 28.07.2014.
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:flextras="spark.flextras.autoCompleteComboBox.*"
         creationComplete="onCreationComplete(event)">
    <s:layout>
        <s:VerticalLayout paddingBottom="10"/>
    </s:layout>

    <fx:Script>
        <![CDATA[
        import controllers.IngredientAdminController;
        import controllers.supportClasses.IngredientCategories;

        import models.IngredientsModel;
        import models.supportClasses.Ingredient;

        import mx.collections.ArrayList;
        import mx.events.FlexEvent;

        import spark.events.IndexChangeEvent;
        import spark.events.TextOperationEvent;

        [Bindable]
        private var _model:Ingredient;
        private var _controller:IngredientAdminController;

        [Bindable]
        private var _categories:ArrayList = new ArrayList([IngredientCategories.HARD_DRINKS,
            IngredientCategories.SOFT_DRINKS,
            IngredientCategories.LIQUORS,
            IngredientCategories.VIRGIN_DRINKS,
            IngredientCategories.OTHER]);

        private function onCreateIngredientButtonClick(event:MouseEvent):void
        {
            _controller.createNewIngredient();
        }

        private function onDeleteClick(event:MouseEvent):void
        {
            _controller.deleteIngredient();
        }

        private function onSaveButtonClick(event:MouseEvent):void
        {
            _controller.saveCurrentIngredient();
        }

        private function onIngrChooseChange(event:IndexChangeEvent):void
        {
            _controller.loadIngredient(ingrChoose.selectedItem as Ingredient);
            setCategory(_model.category);
        }

        private function onCreationComplete(event:FlexEvent):void
        {
            _model = new Ingredient();
            _controller = new IngredientAdminController(_model);
        }

        private function onVolumeChange(event:TextOperationEvent):void
        {
            _model.vol = uint(volumeInput.text);
        }

        private function filterList(item:Object):Boolean
        {
            var inputValue:String = ingrChoose.typeAheadText.toLowerCase();
            var ingr:Ingredient = Ingredient(item);
            return (String(ingr.name).toLowerCase().search(inputValue) > -1);
        }

        private function onCategoryChange(event:IndexChangeEvent):void
        {
            _model.category = categoryComboBox.selectedItem;
        }

        private function setCategory(category:String):void
        {
            for (var j:int = 0; j < _categories.length; j++)
            {
                if (_categories.getItemAt(j) == category) {
                    categoryComboBox.selectedIndex = j;
                    return;
                }
            }

            categoryComboBox.selectedIndex = -1;
        }
        ]]>
    </fx:Script>


    <s:HGroup>
        <s:Button label="Создать" click="onCreateIngredientButtonClick(event)"/>
        <s:Button label="Удалить" click="onDeleteClick(event)"/>
        <s:Spacer width="1"/>
        <s:Button label="Сохранить" click="onSaveButtonClick(event)"/>
    </s:HGroup>
    <mx:HRule width="100%" strokeWidth="1" strokeColor="0x000000"/>
    <flextras:AutoCompleteComboBoxLite id="ingrChoose" width="100%" height="26"
                                       styleName="regularText" filterFunction="filterList"
                                       itemRenderer="components.renderers.AutoCompleteRenderer"
                                       skinClass="design.skins.LiveSearchComboBoxSkin"
                                       focusSkin="{null}" focusRect="false"
                                       labelField="name" paddingLeft="0" prompt="Напишите ингредиент..."
                                       change="onIngrChooseChange(event)"
                                       dataProvider="{IngredientsModel.instance.ingredientsList}"/>
    <mx:HRule width="100%" strokeWidth="1" strokeColor="0x000000"/>
    <s:HGroup>
        <s:TextInput id="ingredientName" text="@{_model.name}" width="300" prompt="название..."/>
        <s:ComboBox id="categoryComboBox" selectedItem="@{_model.category}" width="300" prompt="категория..." change="onCategoryChange(event)" dataProvider="{_categories}" />
    </s:HGroup>
    <s:TextInput id="volumeInput" restrict="0-9" text="{_model.vol}" change="onVolumeChange(event)"
                 prompt="крепость..."/>
    <s:TextArea id="ingredientDescription" width="100%" height="100%" textAlign="left" verticalAlign="top"
                text="@{_model.description}" prompt="описание..."/>

</s:Group>
